-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc/quantized_bpf/filter_block.vhd
-- Created: 2025-05-11 09:46:50
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: filter_block
-- Source Path: quantized_bpf/Filter/filter
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.Filter_pkg.ALL;

ENTITY filter_block IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_const_rate                    :   IN    std_logic;
        filter_in                         :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
        filter_out                        :   OUT   std_logic_vector(11 DOWNTO 0)  -- sfix12_En8
        );
END filter_block;


ARCHITECTURE rtl OF filter_block IS

  -- Signals
  SIGNAL filter_in_signed                 : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL scaleconst1                      : signed(11 DOWNTO 0);  -- sfix12_En11
  SIGNAL multiplier_mul_temp              : signed(23 DOWNTO 0);  -- sfix24_En11
  SIGNAL scale1                           : signed(31 DOWNTO 0);  -- sfix32_En19
  SIGNAL scaletypeconvert1                : signed(11 DOWNTO 0);  -- sfix12_En7
  SIGNAL inputconv1                       : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL coeff_a2_section1                : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL coeff_a3_section1                : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL delay_section1                   : vector_of_signed12(0 TO 1);  -- sfix12_En12 [2]
  SIGNAL delay_section1_1                 : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL a3mul1                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL a1sum1_cast2                     : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL typeconvert1                     : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL delay_section1_0                 : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL a2mul1                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL a2sum1_cast2                     : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL Sub_sub_cast                     : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL Sub_sub_cast_1                   : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a2sum1_temp                      : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a2sum1                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL Sub_sub_cast_2                   : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL Sub_sub_cast_3                   : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a1sum1_temp                      : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a1sum1                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL b1mul1                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL b1multypeconvert1                : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL gain_cast                        : signed(12 DOWNTO 0);  -- sfix13_En12
  SIGNAL gain_cast_1                      : signed(12 DOWNTO 0);  -- sfix13_En12
  SIGNAL b3mul1                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL adder_add_cast                   : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL adder_add_cast_1                 : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL adder_add_cast_2                 : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL adder_add_temp                   : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL b1sum1                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL section_result1                  : signed(11 DOWNTO 0);  -- sfix12_En8
  SIGNAL scaleconst2                      : signed(11 DOWNTO 0);  -- sfix12_En11
  SIGNAL multiplier_mul_temp_1            : signed(23 DOWNTO 0);  -- sfix24_En19
  SIGNAL scale2                           : signed(31 DOWNTO 0);  -- sfix32_En19
  SIGNAL scaletypeconvert2                : signed(11 DOWNTO 0);  -- sfix12_En7
  SIGNAL inputconv2                       : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL coeff_a2_section2                : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL coeff_a3_section2                : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL delay_section2                   : vector_of_signed12(0 TO 1);  -- sfix12_En12 [2]
  SIGNAL delay_section2_1                 : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL a3mul2                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL a1sum2_cast2                     : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL typeconvert2                     : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL delay_section2_0                 : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL a2mul2                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL a2sum2_cast2                     : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL Sub_sub_cast_4                   : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL Sub_sub_cast_5                   : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a2sum2_temp                      : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a2sum2                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL Sub_sub_cast_6                   : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL Sub_sub_cast_7                   : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a1sum2_temp                      : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a1sum2                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL b1mul2                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL b1multypeconvert2                : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL gain_cast_2                      : signed(12 DOWNTO 0);  -- sfix13_En12
  SIGNAL gain_cast_3                      : signed(12 DOWNTO 0);  -- sfix13_En12
  SIGNAL b3mul2                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL adder_add_cast_3                 : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL adder_add_cast_4                 : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL adder_add_cast_5                 : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL adder_add_temp_1                 : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL b1sum2                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL section_result2                  : signed(11 DOWNTO 0);  -- sfix12_En8
  SIGNAL scaleconst3                      : signed(11 DOWNTO 0);  -- sfix12_En11
  SIGNAL multiplier_mul_temp_2            : signed(23 DOWNTO 0);  -- sfix24_En19
  SIGNAL scale3                           : signed(31 DOWNTO 0);  -- sfix32_En19
  SIGNAL scaletypeconvert3                : signed(11 DOWNTO 0);  -- sfix12_En7
  SIGNAL inputconv3                       : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL coeff_a2_section3                : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL coeff_a3_section3                : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL delay_section3                   : vector_of_signed12(0 TO 1);  -- sfix12_En12 [2]
  SIGNAL delay_section3_1                 : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL a3mul3                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL a1sum3_cast2                     : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL typeconvert3                     : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL delay_section3_0                 : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL a2mul3                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL a2sum3_cast2                     : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL Sub_sub_cast_8                   : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL Sub_sub_cast_9                   : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a2sum3_temp                      : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a2sum3                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL Sub_sub_cast_10                  : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL Sub_sub_cast_11                  : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a1sum3_temp                      : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a1sum3                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL b1mul3                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL b1multypeconvert3                : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL gain_cast_4                      : signed(12 DOWNTO 0);  -- sfix13_En12
  SIGNAL gain_cast_5                      : signed(12 DOWNTO 0);  -- sfix13_En12
  SIGNAL b3mul3                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL adder_add_cast_6                 : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL adder_add_cast_7                 : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL adder_add_cast_8                 : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL adder_add_temp_2                 : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL b1sum3                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL section_result3                  : signed(11 DOWNTO 0);  -- sfix12_En8
  SIGNAL scaleconst4                      : signed(11 DOWNTO 0);  -- sfix12_En11
  SIGNAL multiplier_mul_temp_3            : signed(23 DOWNTO 0);  -- sfix24_En19
  SIGNAL scale4                           : signed(31 DOWNTO 0);  -- sfix32_En19
  SIGNAL scaletypeconvert4                : signed(11 DOWNTO 0);  -- sfix12_En7
  SIGNAL inputconv4                       : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL coeff_a2_section4                : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL coeff_a3_section4                : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL delay_section4                   : vector_of_signed12(0 TO 1);  -- sfix12_En12 [2]
  SIGNAL delay_section4_1                 : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL a3mul4                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL a1sum4_cast2                     : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL typeconvert4                     : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL delay_section4_0                 : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL a2mul4                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL a2sum4_cast2                     : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL Sub_sub_cast_12                  : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL Sub_sub_cast_13                  : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a2sum4_temp                      : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a2sum4                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL Sub_sub_cast_14                  : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL Sub_sub_cast_15                  : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a1sum4_temp                      : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a1sum4                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL b1mul4                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL b1multypeconvert4                : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL gain_cast_6                      : signed(12 DOWNTO 0);  -- sfix13_En12
  SIGNAL gain_cast_7                      : signed(12 DOWNTO 0);  -- sfix13_En12
  SIGNAL b3mul4                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL adder_add_cast_9                 : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL adder_add_cast_10                : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL adder_add_cast_11                : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL adder_add_temp_3                 : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL b1sum4                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL section_result4                  : signed(11 DOWNTO 0);  -- sfix12_En8
  SIGNAL scaleconst5                      : signed(11 DOWNTO 0);  -- sfix12_En11
  SIGNAL multiplier_mul_temp_4            : signed(23 DOWNTO 0);  -- sfix24_En19
  SIGNAL scale5                           : signed(31 DOWNTO 0);  -- sfix32_En19
  SIGNAL scaletypeconvert5                : signed(11 DOWNTO 0);  -- sfix12_En7
  SIGNAL inputconv5                       : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL coeff_a2_section5                : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL coeff_a3_section5                : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL delay_section5                   : vector_of_signed12(0 TO 1);  -- sfix12_En12 [2]
  SIGNAL delay_section5_1                 : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL a3mul5                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL a1sum5_cast2                     : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL typeconvert5                     : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL delay_section5_0                 : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL a2mul5                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL a2sum5_cast2                     : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL Sub_sub_cast_16                  : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL Sub_sub_cast_17                  : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a2sum5_temp                      : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a2sum5                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL Sub_sub_cast_18                  : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL Sub_sub_cast_19                  : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a1sum5_temp                      : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a1sum5                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL b1mul5                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL b1multypeconvert5                : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL gain_cast_8                      : signed(12 DOWNTO 0);  -- sfix13_En12
  SIGNAL gain_cast_9                      : signed(12 DOWNTO 0);  -- sfix13_En12
  SIGNAL b3mul5                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL adder_add_cast_12                : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL adder_add_cast_13                : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL adder_add_cast_14                : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL adder_add_temp_4                 : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL b1sum5                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL section_result5                  : signed(11 DOWNTO 0);  -- sfix12_En8
  SIGNAL scaleconst6                      : signed(11 DOWNTO 0);  -- sfix12_En11
  SIGNAL multiplier_mul_temp_5            : signed(23 DOWNTO 0);  -- sfix24_En19
  SIGNAL scale6                           : signed(31 DOWNTO 0);  -- sfix32_En19
  SIGNAL scaletypeconvert6                : signed(11 DOWNTO 0);  -- sfix12_En7
  SIGNAL inputconv6                       : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL coeff_a2_section6                : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL coeff_a3_section6                : signed(11 DOWNTO 0);  -- sfix12_En10
  SIGNAL delay_section6                   : vector_of_signed12(0 TO 1);  -- sfix12_En12 [2]
  SIGNAL delay_section6_1                 : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL a3mul6                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL a1sum6_cast2                     : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL typeconvert6                     : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL delay_section6_0                 : signed(11 DOWNTO 0);  -- sfix12_En12
  SIGNAL a2mul6                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL a2sum6_cast2                     : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL Sub_sub_cast_20                  : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL Sub_sub_cast_21                  : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a2sum6_temp                      : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a2sum6                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL Sub_sub_cast_22                  : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL Sub_sub_cast_23                  : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a1sum6_temp                      : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL a1sum6                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL b1mul6                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL b1multypeconvert6                : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL gain_cast_10                     : signed(12 DOWNTO 0);  -- sfix13_En12
  SIGNAL gain_cast_11                     : signed(12 DOWNTO 0);  -- sfix13_En12
  SIGNAL b3mul6                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL adder_add_cast_15                : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL adder_add_cast_16                : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL adder_add_cast_17                : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL adder_add_temp_5                 : signed(40 DOWNTO 0);  -- sfix41_En22
  SIGNAL b1sum6                           : signed(39 DOWNTO 0);  -- sfix40_En22
  SIGNAL output_typeconvert               : signed(11 DOWNTO 0);  -- sfix12_En8

BEGIN
  filter_in_signed <= signed(filter_in);

  scaleconst1 <= to_signed(16#716#, 12);

  multiplier_mul_temp <= filter_in_signed * scaleconst1;
  scale1 <= multiplier_mul_temp & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';

  
  scaletypeconvert1 <= "011111111111" WHEN ((scale1(31) = '0') AND (scale1(30 DOWNTO 23) /= "00000000")) OR ((scale1(31) = '0') AND (scale1(23 DOWNTO 12) = "011111111111")) ELSE
      "100000000000" WHEN (scale1(31) = '1') AND (scale1(30 DOWNTO 23) /= "11111111") ELSE
      scale1(23 DOWNTO 12) + ('0' & (scale1(11) AND (scale1(12) OR (scale1(10) OR scale1(9) OR scale1(8) OR scale1(7) OR scale1(6) OR scale1(5) OR scale1(4) OR scale1(3) OR scale1(2) OR scale1(1) OR scale1(0)))));

  inputconv1 <= resize(scaletypeconvert1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 40);

  coeff_a2_section1 <= to_signed(16#6A1#, 12);

  coeff_a3_section1 <= to_signed(16#343#, 12);

  delay_section1_1 <= delay_section1(1);

  a3mul1 <= delay_section1_1 * coeff_a3_section1;

  a1sum1_cast2 <= resize(a3mul1, 40);

  delay_process_section1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section1 <= (OTHERS => to_signed(16#000#, 12));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_const_rate = '1' THEN
        delay_section1(0) <= typeconvert1;
        delay_section1(1) <= delay_section1(0);
      END IF;
    END IF;
  END PROCESS delay_process_section1_process;


  -- coeff_b2_section1
  delay_section1_0 <= delay_section1(0);

  a2mul1 <= delay_section1_0 * coeff_a2_section1;

  a2sum1_cast2 <= resize(a2mul1, 40);

  Sub_sub_cast <= resize(inputconv1, 41);
  Sub_sub_cast_1 <= resize(a2sum1_cast2, 41);
  a2sum1_temp <= Sub_sub_cast - Sub_sub_cast_1;

  
  a2sum1 <= X"7FFFFFFFFF" WHEN (a2sum1_temp(40) = '0') AND (a2sum1_temp(39) /= '0') ELSE
      X"8000000000" WHEN (a2sum1_temp(40) = '1') AND (a2sum1_temp(39) /= '1') ELSE
      a2sum1_temp(39 DOWNTO 0);

  Sub_sub_cast_2 <= resize(a2sum1, 41);
  Sub_sub_cast_3 <= resize(a1sum1_cast2, 41);
  a1sum1_temp <= Sub_sub_cast_2 - Sub_sub_cast_3;

  
  a1sum1 <= X"7FFFFFFFFF" WHEN (a1sum1_temp(40) = '0') AND (a1sum1_temp(39) /= '0') ELSE
      X"8000000000" WHEN (a1sum1_temp(40) = '1') AND (a1sum1_temp(39) /= '1') ELSE
      a1sum1_temp(39 DOWNTO 0);

  
  typeconvert1 <= "011111111111" WHEN ((a1sum1(39) = '0') AND (a1sum1(38 DOWNTO 21) /= "000000000000000000")) OR ((a1sum1(39) = '0') AND (a1sum1(21 DOWNTO 10) = "011111111111")) ELSE
      "100000000000" WHEN (a1sum1(39) = '1') AND (a1sum1(38 DOWNTO 21) /= "111111111111111111") ELSE
      a1sum1(21 DOWNTO 10) + ('0' & (a1sum1(9) AND (a1sum1(10) OR (a1sum1(8) OR a1sum1(7) OR a1sum1(6) OR a1sum1(5) OR a1sum1(4) OR a1sum1(3) OR a1sum1(2) OR a1sum1(1) OR a1sum1(0)))));

  -- coeff_b1_section1
  b1mul1 <= resize(typeconvert1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  b1multypeconvert1 <= resize(b1mul1, 40);

  -- coeff_b3_section1
  gain_cast <= resize(delay_section1_1, 13);
  gain_cast_1 <=  - (gain_cast);
  b3mul1 <= resize(gain_cast_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  adder_add_cast <= resize(b1multypeconvert1, 41);
  adder_add_cast_1 <= resize(b3mul1, 40);
  adder_add_cast_2 <= resize(adder_add_cast_1, 41);
  adder_add_temp <= adder_add_cast + adder_add_cast_2;
  
  b1sum1 <= X"7FFFFFFFFF" WHEN (adder_add_temp(40) = '0') AND (adder_add_temp(39) /= '0') ELSE
      X"8000000000" WHEN (adder_add_temp(40) = '1') AND (adder_add_temp(39) /= '1') ELSE
      adder_add_temp(39 DOWNTO 0);

  
  section_result1 <= "011111111111" WHEN ((b1sum1(39) = '0') AND (b1sum1(38 DOWNTO 25) /= "00000000000000")) OR ((b1sum1(39) = '0') AND (b1sum1(25 DOWNTO 14) = "011111111111")) ELSE
      "100000000000" WHEN (b1sum1(39) = '1') AND (b1sum1(38 DOWNTO 25) /= "11111111111111") ELSE
      b1sum1(25 DOWNTO 14) + ('0' & (b1sum1(13) AND (b1sum1(14) OR (b1sum1(12) OR b1sum1(11) OR b1sum1(10) OR b1sum1(9) OR b1sum1(8) OR b1sum1(7) OR b1sum1(6) OR b1sum1(5) OR b1sum1(4) OR b1sum1(3) OR b1sum1(2) OR b1sum1(1) OR b1sum1(0)))));

  scaleconst2 <= to_signed(16#716#, 12);

  multiplier_mul_temp_1 <= section_result1 * scaleconst2;
  scale2 <= resize(multiplier_mul_temp_1, 32);

  
  scaletypeconvert2 <= "011111111111" WHEN ((scale2(31) = '0') AND (scale2(30 DOWNTO 23) /= "00000000")) OR ((scale2(31) = '0') AND (scale2(23 DOWNTO 12) = "011111111111")) ELSE
      "100000000000" WHEN (scale2(31) = '1') AND (scale2(30 DOWNTO 23) /= "11111111") ELSE
      scale2(23 DOWNTO 12) + ('0' & (scale2(11) AND (scale2(12) OR (scale2(10) OR scale2(9) OR scale2(8) OR scale2(7) OR scale2(6) OR scale2(5) OR scale2(4) OR scale2(3) OR scale2(2) OR scale2(1) OR scale2(0)))));

  inputconv2 <= resize(scaletypeconvert2 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 40);

  coeff_a2_section2 <= to_signed(-16#771#, 12);

  coeff_a3_section2 <= to_signed(16#39B#, 12);

  delay_section2_1 <= delay_section2(1);

  a3mul2 <= delay_section2_1 * coeff_a3_section2;

  a1sum2_cast2 <= resize(a3mul2, 40);

  delay_process_section2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section2 <= (OTHERS => to_signed(16#000#, 12));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_const_rate = '1' THEN
        delay_section2(0) <= typeconvert2;
        delay_section2(1) <= delay_section2(0);
      END IF;
    END IF;
  END PROCESS delay_process_section2_process;


  -- coeff_b2_section2
  delay_section2_0 <= delay_section2(0);

  a2mul2 <= delay_section2_0 * coeff_a2_section2;

  a2sum2_cast2 <= resize(a2mul2, 40);

  Sub_sub_cast_4 <= resize(inputconv2, 41);
  Sub_sub_cast_5 <= resize(a2sum2_cast2, 41);
  a2sum2_temp <= Sub_sub_cast_4 - Sub_sub_cast_5;

  
  a2sum2 <= X"7FFFFFFFFF" WHEN (a2sum2_temp(40) = '0') AND (a2sum2_temp(39) /= '0') ELSE
      X"8000000000" WHEN (a2sum2_temp(40) = '1') AND (a2sum2_temp(39) /= '1') ELSE
      a2sum2_temp(39 DOWNTO 0);

  Sub_sub_cast_6 <= resize(a2sum2, 41);
  Sub_sub_cast_7 <= resize(a1sum2_cast2, 41);
  a1sum2_temp <= Sub_sub_cast_6 - Sub_sub_cast_7;

  
  a1sum2 <= X"7FFFFFFFFF" WHEN (a1sum2_temp(40) = '0') AND (a1sum2_temp(39) /= '0') ELSE
      X"8000000000" WHEN (a1sum2_temp(40) = '1') AND (a1sum2_temp(39) /= '1') ELSE
      a1sum2_temp(39 DOWNTO 0);

  
  typeconvert2 <= "011111111111" WHEN ((a1sum2(39) = '0') AND (a1sum2(38 DOWNTO 21) /= "000000000000000000")) OR ((a1sum2(39) = '0') AND (a1sum2(21 DOWNTO 10) = "011111111111")) ELSE
      "100000000000" WHEN (a1sum2(39) = '1') AND (a1sum2(38 DOWNTO 21) /= "111111111111111111") ELSE
      a1sum2(21 DOWNTO 10) + ('0' & (a1sum2(9) AND (a1sum2(10) OR (a1sum2(8) OR a1sum2(7) OR a1sum2(6) OR a1sum2(5) OR a1sum2(4) OR a1sum2(3) OR a1sum2(2) OR a1sum2(1) OR a1sum2(0)))));

  -- coeff_b1_section2
  b1mul2 <= resize(typeconvert2 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  b1multypeconvert2 <= resize(b1mul2, 40);

  -- coeff_b3_section2
  gain_cast_2 <= resize(delay_section2_1, 13);
  gain_cast_3 <=  - (gain_cast_2);
  b3mul2 <= resize(gain_cast_3 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  adder_add_cast_3 <= resize(b1multypeconvert2, 41);
  adder_add_cast_4 <= resize(b3mul2, 40);
  adder_add_cast_5 <= resize(adder_add_cast_4, 41);
  adder_add_temp_1 <= adder_add_cast_3 + adder_add_cast_5;
  
  b1sum2 <= X"7FFFFFFFFF" WHEN (adder_add_temp_1(40) = '0') AND (adder_add_temp_1(39) /= '0') ELSE
      X"8000000000" WHEN (adder_add_temp_1(40) = '1') AND (adder_add_temp_1(39) /= '1') ELSE
      adder_add_temp_1(39 DOWNTO 0);

  
  section_result2 <= "011111111111" WHEN ((b1sum2(39) = '0') AND (b1sum2(38 DOWNTO 25) /= "00000000000000")) OR ((b1sum2(39) = '0') AND (b1sum2(25 DOWNTO 14) = "011111111111")) ELSE
      "100000000000" WHEN (b1sum2(39) = '1') AND (b1sum2(38 DOWNTO 25) /= "11111111111111") ELSE
      b1sum2(25 DOWNTO 14) + ('0' & (b1sum2(13) AND (b1sum2(14) OR (b1sum2(12) OR b1sum2(11) OR b1sum2(10) OR b1sum2(9) OR b1sum2(8) OR b1sum2(7) OR b1sum2(6) OR b1sum2(5) OR b1sum2(4) OR b1sum2(3) OR b1sum2(2) OR b1sum2(1) OR b1sum2(0)))));

  scaleconst3 <= to_signed(16#665#, 12);

  multiplier_mul_temp_2 <= section_result2 * scaleconst3;
  scale3 <= resize(multiplier_mul_temp_2, 32);

  
  scaletypeconvert3 <= "011111111111" WHEN ((scale3(31) = '0') AND (scale3(30 DOWNTO 23) /= "00000000")) OR ((scale3(31) = '0') AND (scale3(23 DOWNTO 12) = "011111111111")) ELSE
      "100000000000" WHEN (scale3(31) = '1') AND (scale3(30 DOWNTO 23) /= "11111111") ELSE
      scale3(23 DOWNTO 12) + ('0' & (scale3(11) AND (scale3(12) OR (scale3(10) OR scale3(9) OR scale3(8) OR scale3(7) OR scale3(6) OR scale3(5) OR scale3(4) OR scale3(3) OR scale3(2) OR scale3(1) OR scale3(0)))));

  inputconv3 <= resize(scaletypeconvert3 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 40);

  coeff_a2_section3 <= to_signed(-16#6D2#, 12);

  coeff_a3_section3 <= to_signed(16#2FA#, 12);

  delay_section3_1 <= delay_section3(1);

  a3mul3 <= delay_section3_1 * coeff_a3_section3;

  a1sum3_cast2 <= resize(a3mul3, 40);

  delay_process_section3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section3 <= (OTHERS => to_signed(16#000#, 12));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_const_rate = '1' THEN
        delay_section3(0) <= typeconvert3;
        delay_section3(1) <= delay_section3(0);
      END IF;
    END IF;
  END PROCESS delay_process_section3_process;


  -- coeff_b2_section3
  delay_section3_0 <= delay_section3(0);

  a2mul3 <= delay_section3_0 * coeff_a2_section3;

  a2sum3_cast2 <= resize(a2mul3, 40);

  Sub_sub_cast_8 <= resize(inputconv3, 41);
  Sub_sub_cast_9 <= resize(a2sum3_cast2, 41);
  a2sum3_temp <= Sub_sub_cast_8 - Sub_sub_cast_9;

  
  a2sum3 <= X"7FFFFFFFFF" WHEN (a2sum3_temp(40) = '0') AND (a2sum3_temp(39) /= '0') ELSE
      X"8000000000" WHEN (a2sum3_temp(40) = '1') AND (a2sum3_temp(39) /= '1') ELSE
      a2sum3_temp(39 DOWNTO 0);

  Sub_sub_cast_10 <= resize(a2sum3, 41);
  Sub_sub_cast_11 <= resize(a1sum3_cast2, 41);
  a1sum3_temp <= Sub_sub_cast_10 - Sub_sub_cast_11;

  
  a1sum3 <= X"7FFFFFFFFF" WHEN (a1sum3_temp(40) = '0') AND (a1sum3_temp(39) /= '0') ELSE
      X"8000000000" WHEN (a1sum3_temp(40) = '1') AND (a1sum3_temp(39) /= '1') ELSE
      a1sum3_temp(39 DOWNTO 0);

  
  typeconvert3 <= "011111111111" WHEN ((a1sum3(39) = '0') AND (a1sum3(38 DOWNTO 21) /= "000000000000000000")) OR ((a1sum3(39) = '0') AND (a1sum3(21 DOWNTO 10) = "011111111111")) ELSE
      "100000000000" WHEN (a1sum3(39) = '1') AND (a1sum3(38 DOWNTO 21) /= "111111111111111111") ELSE
      a1sum3(21 DOWNTO 10) + ('0' & (a1sum3(9) AND (a1sum3(10) OR (a1sum3(8) OR a1sum3(7) OR a1sum3(6) OR a1sum3(5) OR a1sum3(4) OR a1sum3(3) OR a1sum3(2) OR a1sum3(1) OR a1sum3(0)))));

  -- coeff_b1_section3
  b1mul3 <= resize(typeconvert3 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  b1multypeconvert3 <= resize(b1mul3, 40);

  -- coeff_b3_section3
  gain_cast_4 <= resize(delay_section3_1, 13);
  gain_cast_5 <=  - (gain_cast_4);
  b3mul3 <= resize(gain_cast_5 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  adder_add_cast_6 <= resize(b1multypeconvert3, 41);
  adder_add_cast_7 <= resize(b3mul3, 40);
  adder_add_cast_8 <= resize(adder_add_cast_7, 41);
  adder_add_temp_2 <= adder_add_cast_6 + adder_add_cast_8;
  
  b1sum3 <= X"7FFFFFFFFF" WHEN (adder_add_temp_2(40) = '0') AND (adder_add_temp_2(39) /= '0') ELSE
      X"8000000000" WHEN (adder_add_temp_2(40) = '1') AND (adder_add_temp_2(39) /= '1') ELSE
      adder_add_temp_2(39 DOWNTO 0);

  
  section_result3 <= "011111111111" WHEN ((b1sum3(39) = '0') AND (b1sum3(38 DOWNTO 25) /= "00000000000000")) OR ((b1sum3(39) = '0') AND (b1sum3(25 DOWNTO 14) = "011111111111")) ELSE
      "100000000000" WHEN (b1sum3(39) = '1') AND (b1sum3(38 DOWNTO 25) /= "11111111111111") ELSE
      b1sum3(25 DOWNTO 14) + ('0' & (b1sum3(13) AND (b1sum3(14) OR (b1sum3(12) OR b1sum3(11) OR b1sum3(10) OR b1sum3(9) OR b1sum3(8) OR b1sum3(7) OR b1sum3(6) OR b1sum3(5) OR b1sum3(4) OR b1sum3(3) OR b1sum3(2) OR b1sum3(1) OR b1sum3(0)))));

  scaleconst4 <= to_signed(16#665#, 12);

  multiplier_mul_temp_3 <= section_result3 * scaleconst4;
  scale4 <= resize(multiplier_mul_temp_3, 32);

  
  scaletypeconvert4 <= "011111111111" WHEN ((scale4(31) = '0') AND (scale4(30 DOWNTO 23) /= "00000000")) OR ((scale4(31) = '0') AND (scale4(23 DOWNTO 12) = "011111111111")) ELSE
      "100000000000" WHEN (scale4(31) = '1') AND (scale4(30 DOWNTO 23) /= "11111111") ELSE
      scale4(23 DOWNTO 12) + ('0' & (scale4(11) AND (scale4(12) OR (scale4(10) OR scale4(9) OR scale4(8) OR scale4(7) OR scale4(6) OR scale4(5) OR scale4(4) OR scale4(3) OR scale4(2) OR scale4(1) OR scale4(0)))));

  inputconv4 <= resize(scaletypeconvert4 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 40);

  coeff_a2_section4 <= to_signed(16#5A7#, 12);

  coeff_a3_section4 <= to_signed(16#237#, 12);

  delay_section4_1 <= delay_section4(1);

  a3mul4 <= delay_section4_1 * coeff_a3_section4;

  a1sum4_cast2 <= resize(a3mul4, 40);

  delay_process_section4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section4 <= (OTHERS => to_signed(16#000#, 12));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_const_rate = '1' THEN
        delay_section4(0) <= typeconvert4;
        delay_section4(1) <= delay_section4(0);
      END IF;
    END IF;
  END PROCESS delay_process_section4_process;


  -- coeff_b2_section4
  delay_section4_0 <= delay_section4(0);

  a2mul4 <= delay_section4_0 * coeff_a2_section4;

  a2sum4_cast2 <= resize(a2mul4, 40);

  Sub_sub_cast_12 <= resize(inputconv4, 41);
  Sub_sub_cast_13 <= resize(a2sum4_cast2, 41);
  a2sum4_temp <= Sub_sub_cast_12 - Sub_sub_cast_13;

  
  a2sum4 <= X"7FFFFFFFFF" WHEN (a2sum4_temp(40) = '0') AND (a2sum4_temp(39) /= '0') ELSE
      X"8000000000" WHEN (a2sum4_temp(40) = '1') AND (a2sum4_temp(39) /= '1') ELSE
      a2sum4_temp(39 DOWNTO 0);

  Sub_sub_cast_14 <= resize(a2sum4, 41);
  Sub_sub_cast_15 <= resize(a1sum4_cast2, 41);
  a1sum4_temp <= Sub_sub_cast_14 - Sub_sub_cast_15;

  
  a1sum4 <= X"7FFFFFFFFF" WHEN (a1sum4_temp(40) = '0') AND (a1sum4_temp(39) /= '0') ELSE
      X"8000000000" WHEN (a1sum4_temp(40) = '1') AND (a1sum4_temp(39) /= '1') ELSE
      a1sum4_temp(39 DOWNTO 0);

  
  typeconvert4 <= "011111111111" WHEN ((a1sum4(39) = '0') AND (a1sum4(38 DOWNTO 21) /= "000000000000000000")) OR ((a1sum4(39) = '0') AND (a1sum4(21 DOWNTO 10) = "011111111111")) ELSE
      "100000000000" WHEN (a1sum4(39) = '1') AND (a1sum4(38 DOWNTO 21) /= "111111111111111111") ELSE
      a1sum4(21 DOWNTO 10) + ('0' & (a1sum4(9) AND (a1sum4(10) OR (a1sum4(8) OR a1sum4(7) OR a1sum4(6) OR a1sum4(5) OR a1sum4(4) OR a1sum4(3) OR a1sum4(2) OR a1sum4(1) OR a1sum4(0)))));

  -- coeff_b1_section4
  b1mul4 <= resize(typeconvert4 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  b1multypeconvert4 <= resize(b1mul4, 40);

  -- coeff_b3_section4
  gain_cast_6 <= resize(delay_section4_1, 13);
  gain_cast_7 <=  - (gain_cast_6);
  b3mul4 <= resize(gain_cast_7 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  adder_add_cast_9 <= resize(b1multypeconvert4, 41);
  adder_add_cast_10 <= resize(b3mul4, 40);
  adder_add_cast_11 <= resize(adder_add_cast_10, 41);
  adder_add_temp_3 <= adder_add_cast_9 + adder_add_cast_11;
  
  b1sum4 <= X"7FFFFFFFFF" WHEN (adder_add_temp_3(40) = '0') AND (adder_add_temp_3(39) /= '0') ELSE
      X"8000000000" WHEN (adder_add_temp_3(40) = '1') AND (adder_add_temp_3(39) /= '1') ELSE
      adder_add_temp_3(39 DOWNTO 0);

  
  section_result4 <= "011111111111" WHEN ((b1sum4(39) = '0') AND (b1sum4(38 DOWNTO 25) /= "00000000000000")) OR ((b1sum4(39) = '0') AND (b1sum4(25 DOWNTO 14) = "011111111111")) ELSE
      "100000000000" WHEN (b1sum4(39) = '1') AND (b1sum4(38 DOWNTO 25) /= "11111111111111") ELSE
      b1sum4(25 DOWNTO 14) + ('0' & (b1sum4(13) AND (b1sum4(14) OR (b1sum4(12) OR b1sum4(11) OR b1sum4(10) OR b1sum4(9) OR b1sum4(8) OR b1sum4(7) OR b1sum4(6) OR b1sum4(5) OR b1sum4(4) OR b1sum4(3) OR b1sum4(2) OR b1sum4(1) OR b1sum4(0)))));

  scaleconst5 <= to_signed(16#613#, 12);

  multiplier_mul_temp_4 <= section_result4 * scaleconst5;
  scale5 <= resize(multiplier_mul_temp_4, 32);

  
  scaletypeconvert5 <= "011111111111" WHEN ((scale5(31) = '0') AND (scale5(30 DOWNTO 23) /= "00000000")) OR ((scale5(31) = '0') AND (scale5(23 DOWNTO 12) = "011111111111")) ELSE
      "100000000000" WHEN (scale5(31) = '1') AND (scale5(30 DOWNTO 23) /= "11111111") ELSE
      scale5(23 DOWNTO 12) + ('0' & (scale5(11) AND (scale5(12) OR (scale5(10) OR scale5(9) OR scale5(8) OR scale5(7) OR scale5(6) OR scale5(5) OR scale5(4) OR scale5(3) OR scale5(2) OR scale5(1) OR scale5(0)))));

  inputconv5 <= resize(scaletypeconvert5 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 40);

  coeff_a2_section5 <= to_signed(-16#676#, 12);

  coeff_a3_section5 <= to_signed(16#29E#, 12);

  delay_section5_1 <= delay_section5(1);

  a3mul5 <= delay_section5_1 * coeff_a3_section5;

  a1sum5_cast2 <= resize(a3mul5, 40);

  delay_process_section5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section5 <= (OTHERS => to_signed(16#000#, 12));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_const_rate = '1' THEN
        delay_section5(0) <= typeconvert5;
        delay_section5(1) <= delay_section5(0);
      END IF;
    END IF;
  END PROCESS delay_process_section5_process;


  -- coeff_b2_section5
  delay_section5_0 <= delay_section5(0);

  a2mul5 <= delay_section5_0 * coeff_a2_section5;

  a2sum5_cast2 <= resize(a2mul5, 40);

  Sub_sub_cast_16 <= resize(inputconv5, 41);
  Sub_sub_cast_17 <= resize(a2sum5_cast2, 41);
  a2sum5_temp <= Sub_sub_cast_16 - Sub_sub_cast_17;

  
  a2sum5 <= X"7FFFFFFFFF" WHEN (a2sum5_temp(40) = '0') AND (a2sum5_temp(39) /= '0') ELSE
      X"8000000000" WHEN (a2sum5_temp(40) = '1') AND (a2sum5_temp(39) /= '1') ELSE
      a2sum5_temp(39 DOWNTO 0);

  Sub_sub_cast_18 <= resize(a2sum5, 41);
  Sub_sub_cast_19 <= resize(a1sum5_cast2, 41);
  a1sum5_temp <= Sub_sub_cast_18 - Sub_sub_cast_19;

  
  a1sum5 <= X"7FFFFFFFFF" WHEN (a1sum5_temp(40) = '0') AND (a1sum5_temp(39) /= '0') ELSE
      X"8000000000" WHEN (a1sum5_temp(40) = '1') AND (a1sum5_temp(39) /= '1') ELSE
      a1sum5_temp(39 DOWNTO 0);

  
  typeconvert5 <= "011111111111" WHEN ((a1sum5(39) = '0') AND (a1sum5(38 DOWNTO 21) /= "000000000000000000")) OR ((a1sum5(39) = '0') AND (a1sum5(21 DOWNTO 10) = "011111111111")) ELSE
      "100000000000" WHEN (a1sum5(39) = '1') AND (a1sum5(38 DOWNTO 21) /= "111111111111111111") ELSE
      a1sum5(21 DOWNTO 10) + ('0' & (a1sum5(9) AND (a1sum5(10) OR (a1sum5(8) OR a1sum5(7) OR a1sum5(6) OR a1sum5(5) OR a1sum5(4) OR a1sum5(3) OR a1sum5(2) OR a1sum5(1) OR a1sum5(0)))));

  -- coeff_b1_section5
  b1mul5 <= resize(typeconvert5 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  b1multypeconvert5 <= resize(b1mul5, 40);

  -- coeff_b3_section5
  gain_cast_8 <= resize(delay_section5_1, 13);
  gain_cast_9 <=  - (gain_cast_8);
  b3mul5 <= resize(gain_cast_9 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  adder_add_cast_12 <= resize(b1multypeconvert5, 41);
  adder_add_cast_13 <= resize(b3mul5, 40);
  adder_add_cast_14 <= resize(adder_add_cast_13, 41);
  adder_add_temp_4 <= adder_add_cast_12 + adder_add_cast_14;
  
  b1sum5 <= X"7FFFFFFFFF" WHEN (adder_add_temp_4(40) = '0') AND (adder_add_temp_4(39) /= '0') ELSE
      X"8000000000" WHEN (adder_add_temp_4(40) = '1') AND (adder_add_temp_4(39) /= '1') ELSE
      adder_add_temp_4(39 DOWNTO 0);

  
  section_result5 <= "011111111111" WHEN ((b1sum5(39) = '0') AND (b1sum5(38 DOWNTO 25) /= "00000000000000")) OR ((b1sum5(39) = '0') AND (b1sum5(25 DOWNTO 14) = "011111111111")) ELSE
      "100000000000" WHEN (b1sum5(39) = '1') AND (b1sum5(38 DOWNTO 25) /= "11111111111111") ELSE
      b1sum5(25 DOWNTO 14) + ('0' & (b1sum5(13) AND (b1sum5(14) OR (b1sum5(12) OR b1sum5(11) OR b1sum5(10) OR b1sum5(9) OR b1sum5(8) OR b1sum5(7) OR b1sum5(6) OR b1sum5(5) OR b1sum5(4) OR b1sum5(3) OR b1sum5(2) OR b1sum5(1) OR b1sum5(0)))));

  scaleconst6 <= to_signed(16#613#, 12);

  multiplier_mul_temp_5 <= section_result5 * scaleconst6;
  scale6 <= resize(multiplier_mul_temp_5, 32);

  
  scaletypeconvert6 <= "011111111111" WHEN ((scale6(31) = '0') AND (scale6(30 DOWNTO 23) /= "00000000")) OR ((scale6(31) = '0') AND (scale6(23 DOWNTO 12) = "011111111111")) ELSE
      "100000000000" WHEN (scale6(31) = '1') AND (scale6(30 DOWNTO 23) /= "11111111") ELSE
      scale6(23 DOWNTO 12) + ('0' & (scale6(11) AND (scale6(12) OR (scale6(10) OR scale6(9) OR scale6(8) OR scale6(7) OR scale6(6) OR scale6(5) OR scale6(4) OR scale6(3) OR scale6(2) OR scale6(1) OR scale6(0)))));

  inputconv6 <= resize(scaletypeconvert6 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 40);

  coeff_a2_section6 <= to_signed(16#525#, 12);

  coeff_a3_section6 <= to_signed(16#1AE#, 12);

  delay_section6_1 <= delay_section6(1);

  a3mul6 <= delay_section6_1 * coeff_a3_section6;

  a1sum6_cast2 <= resize(a3mul6, 40);

  delay_process_section6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_section6 <= (OTHERS => to_signed(16#000#, 12));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_const_rate = '1' THEN
        delay_section6(0) <= typeconvert6;
        delay_section6(1) <= delay_section6(0);
      END IF;
    END IF;
  END PROCESS delay_process_section6_process;


  -- coeff_b2_section6
  delay_section6_0 <= delay_section6(0);

  a2mul6 <= delay_section6_0 * coeff_a2_section6;

  a2sum6_cast2 <= resize(a2mul6, 40);

  Sub_sub_cast_20 <= resize(inputconv6, 41);
  Sub_sub_cast_21 <= resize(a2sum6_cast2, 41);
  a2sum6_temp <= Sub_sub_cast_20 - Sub_sub_cast_21;

  
  a2sum6 <= X"7FFFFFFFFF" WHEN (a2sum6_temp(40) = '0') AND (a2sum6_temp(39) /= '0') ELSE
      X"8000000000" WHEN (a2sum6_temp(40) = '1') AND (a2sum6_temp(39) /= '1') ELSE
      a2sum6_temp(39 DOWNTO 0);

  Sub_sub_cast_22 <= resize(a2sum6, 41);
  Sub_sub_cast_23 <= resize(a1sum6_cast2, 41);
  a1sum6_temp <= Sub_sub_cast_22 - Sub_sub_cast_23;

  
  a1sum6 <= X"7FFFFFFFFF" WHEN (a1sum6_temp(40) = '0') AND (a1sum6_temp(39) /= '0') ELSE
      X"8000000000" WHEN (a1sum6_temp(40) = '1') AND (a1sum6_temp(39) /= '1') ELSE
      a1sum6_temp(39 DOWNTO 0);

  
  typeconvert6 <= "011111111111" WHEN ((a1sum6(39) = '0') AND (a1sum6(38 DOWNTO 21) /= "000000000000000000")) OR ((a1sum6(39) = '0') AND (a1sum6(21 DOWNTO 10) = "011111111111")) ELSE
      "100000000000" WHEN (a1sum6(39) = '1') AND (a1sum6(38 DOWNTO 21) /= "111111111111111111") ELSE
      a1sum6(21 DOWNTO 10) + ('0' & (a1sum6(9) AND (a1sum6(10) OR (a1sum6(8) OR a1sum6(7) OR a1sum6(6) OR a1sum6(5) OR a1sum6(4) OR a1sum6(3) OR a1sum6(2) OR a1sum6(1) OR a1sum6(0)))));

  -- coeff_b1_section6
  b1mul6 <= resize(typeconvert6 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  b1multypeconvert6 <= resize(b1mul6, 40);

  -- coeff_b3_section6
  gain_cast_10 <= resize(delay_section6_1, 13);
  gain_cast_11 <=  - (gain_cast_10);
  b3mul6 <= resize(gain_cast_11 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);

  adder_add_cast_15 <= resize(b1multypeconvert6, 41);
  adder_add_cast_16 <= resize(b3mul6, 40);
  adder_add_cast_17 <= resize(adder_add_cast_16, 41);
  adder_add_temp_5 <= adder_add_cast_15 + adder_add_cast_17;
  
  b1sum6 <= X"7FFFFFFFFF" WHEN (adder_add_temp_5(40) = '0') AND (adder_add_temp_5(39) /= '0') ELSE
      X"8000000000" WHEN (adder_add_temp_5(40) = '1') AND (adder_add_temp_5(39) /= '1') ELSE
      adder_add_temp_5(39 DOWNTO 0);

  
  output_typeconvert <= "011111111111" WHEN ((b1sum6(39) = '0') AND (b1sum6(38 DOWNTO 25) /= "00000000000000")) OR ((b1sum6(39) = '0') AND (b1sum6(25 DOWNTO 14) = "011111111111")) ELSE
      "100000000000" WHEN (b1sum6(39) = '1') AND (b1sum6(38 DOWNTO 25) /= "11111111111111") ELSE
      b1sum6(25 DOWNTO 14) + ('0' & (b1sum6(13) AND (b1sum6(14) OR (b1sum6(12) OR b1sum6(11) OR b1sum6(10) OR b1sum6(9) OR b1sum6(8) OR b1sum6(7) OR b1sum6(6) OR b1sum6(5) OR b1sum6(4) OR b1sum6(3) OR b1sum6(2) OR b1sum6(1) OR b1sum6(0)))));

  filter_out <= std_logic_vector(output_typeconvert);

END rtl;

